// Acceldata Inc. and its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// 	Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: actions_factory.go

// Package actions_factory_mock is a generated GoMock package.
package actions_factory_mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	"github.com/acceldata-io/wizard/internal/parser"
	"github.com/acceldata-io/wizard/pkg/actions"
)

// MockActionsFactory is a mock of ActionsFactory interface.
type MockActionsFactory struct {
	ctrl     *gomock.Controller
	recorder *MockActionsFactoryMockRecorder
}

// MockActionsFactoryMockRecorder is the mock recorder for MockActionsFactory.
type MockActionsFactoryMockRecorder struct {
	mock *MockActionsFactory
}

// NewMockActionsFactory creates a new mock instance.
func NewMockActionsFactory(ctrl *gomock.Controller) *MockActionsFactory {
	mock := &MockActionsFactory{ctrl: ctrl}
	mock.recorder = &MockActionsFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockActionsFactory) EXPECT() *MockActionsFactoryMockRecorder {
	return m.recorder
}

// NewActions mocks base method.
func (m *MockActionsFactory) NewActions(list *parser.Action, agentName string, config interface{}, wizardFacts map[string]interface{}, timeout int, register string) actions.Action {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewActions", list, agentName, config, wizardFacts, timeout, register)
	ret0, _ := ret[0].(actions.Action)
	return ret0
}

// NewActions indicates an expected call of NewActions.
func (mr *MockActionsFactoryMockRecorder) NewActions(list, agentName, config, wizardFacts, timeout, register interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewActions", reflect.TypeOf((*MockActionsFactory)(nil).NewActions), list, agentName, config, wizardFacts, timeout, register)
}
